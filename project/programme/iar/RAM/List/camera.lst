###############################################################################
#
# IAR ANSI C/C++ Compiler V8.10.1.12857/W32 for ARM       25/Jan/2018  20:01:45
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\K60_CAR_2018\lib\peripheral\camera.c
#    Command line =  
#        -f C:\Users\19071_~1\AppData\Local\Temp\EW74E4.tmp
#        (F:\K60_CAR_2018\lib\peripheral\camera.c -D LPLD_K60 -D USE_K60DZ10
#        -lCN F:\K60_CAR_2018\project\programme\iar\RAM\List -lB
#        F:\K60_CAR_2018\project\programme\iar\RAM\List -o
#        F:\K60_CAR_2018\project\programme\iar\RAM\Obj --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\K60_CAR_2018\project\programme\iar\..\app\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\CPU\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\common\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\LPLD\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\LPLD\HW\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\LPLD\DEV\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\LPLD\FUNC\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\uCOS-II\Ports\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\uCOS-II\Source\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\FatFs\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\FatFs\option\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\USB\common\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\USB\driver\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\USB\descriptor\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\USB\class\ -I
#        F:\K60_CAR_2018\project\programme\iar\..\..\..\lib\peripheral\ -Ol -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\Include\" -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  F:\K60_CAR_2018\project\programme\iar\RAM\List\camera.lst
#    Object file  =  F:\K60_CAR_2018\project\programme\iar\RAM\Obj\camera.o
#
###############################################################################

F:\K60_CAR_2018\lib\peripheral\camera.c
      1          #include "camera.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __NVIC_EnableIRQ(IRQn_Type)
   \                     __NVIC_EnableIRQ: (+1)
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD409             BMI.N    ??__NVIC_EnableIRQ_0
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0xF010 0x011F      ANDS     R1,R0,#0x1F
   \   0000000C   0x408A             LSLS     R2,R2,R1
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0xe000e100
   \   00000012   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000014   0x0940             LSRS     R0,R0,#+5
   \   00000016   0xF841 0x2020      STR      R2,[R1, R0, LSL #+2]
   \                     ??__NVIC_EnableIRQ_0: (+1)
   \   0000001A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __NVIC_DisableIRQ(IRQn_Type)
   \                     __NVIC_DisableIRQ: (+1)
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD409             BMI.N    ??__NVIC_DisableIRQ_0
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0xF010 0x011F      ANDS     R1,R0,#0x1F
   \   0000000C   0x408A             LSLS     R2,R2,R1
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0xe000e180
   \   00000012   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000014   0x0940             LSRS     R0,R0,#+5
   \   00000016   0xF841 0x2020      STR      R2,[R1, R0, LSL #+2]
   \                     ??__NVIC_DisableIRQ_0: (+1)
   \   0000001A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __NVIC_SetPriority(IRQn_Type, uint32_t)
   \                     __NVIC_SetPriority: (+1)
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD405             BMI.N    ??__NVIC_SetPriority_0
   \   00000006   0x0109             LSLS     R1,R1,#+4
   \   00000008   0x.... 0x....      LDR.W    R2,??DataTable6_2  ;; 0xe000e400
   \   0000000C   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000E   0x5411             STRB     R1,[R2, R0]
   \   00000010   0xE008             B.N      ??__NVIC_SetPriority_1
   \                     ??__NVIC_SetPriority_0: (+1)
   \   00000012   0x0109             LSLS     R1,R1,#+4
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable6_3  ;; 0xe000ed18
   \   00000018   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000001A   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   0000001E   0x4410             ADD      R0,R2,R0
   \   00000020   0xF800 0x1C04      STRB     R1,[R0, #-4]
   \                     ??__NVIC_SetPriority_1: (+1)
   \   00000024   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp uint32_t NVIC_EncodePriority(uint32_t, uint32_t, uint32_t)
   \                     NVIC_EncodePriority: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xF010 0x0007      ANDS     R0,R0,#0x7
   \   00000006   0xF1D0 0x0307      RSBS     R3,R0,#+7
   \   0000000A   0x2B05             CMP      R3,#+5
   \   0000000C   0xD301             BCC.N    ??NVIC_EncodePriority_0
   \   0000000E   0x2304             MOVS     R3,#+4
   \   00000010   0xE001             B.N      ??NVIC_EncodePriority_1
   \                     ??NVIC_EncodePriority_0: (+1)
   \   00000012   0xF1D0 0x0307      RSBS     R3,R0,#+7
   \                     ??NVIC_EncodePriority_1: (+1)
   \   00000016   0x1D04             ADDS     R4,R0,#+4
   \   00000018   0x2C07             CMP      R4,#+7
   \   0000001A   0xD201             BCS.N    ??NVIC_EncodePriority_2
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE000             B.N      ??NVIC_EncodePriority_3
   \                     ??NVIC_EncodePriority_2: (+1)
   \   00000020   0x1EC0             SUBS     R0,R0,#+3
   \                     ??NVIC_EncodePriority_3: (+1)
   \   00000022   0x2401             MOVS     R4,#+1
   \   00000024   0xFA14 0xF303      LSLS     R3,R4,R3
   \   00000028   0x1E5B             SUBS     R3,R3,#+1
   \   0000002A   0x4019             ANDS     R1,R3,R1
   \   0000002C   0x4081             LSLS     R1,R1,R0
   \   0000002E   0x2301             MOVS     R3,#+1
   \   00000030   0xFA13 0xF000      LSLS     R0,R3,R0
   \   00000034   0x1E40             SUBS     R0,R0,#+1
   \   00000036   0x4010             ANDS     R0,R0,R2
   \   00000038   0x4308             ORRS     R0,R0,R1
   \   0000003A   0xBC10             POP      {R4}
   \   0000003C   0x4770             BX       LR               ;; return
      2          

   \                                 In section .bss, align 4
      3          static camera_cfg_t * camcfg;
   \                     camcfg:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      4          static camera_t * camera;
   \                     camera:
   \   00000000                      DS8 4
      5          

   \                                 In section .text, align 2, keep-with-next
      6          static void sync_isr(void){
      7          
      8              /* 行中断 */
      9              if(LPLD_GPIO_IsPinxExt(camcfg->SYNC_PORTX, camcfg->href)){
   \                     sync_isr: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x6C00             LDR      R0,[R0, #+64]
   \   00000008   0xF8D0 0x00A0      LDR      R0,[R0, #+160]
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000010   0x6809             LDR      R1,[R1, #+0]
   \   00000012   0x6A09             LDR      R1,[R1, #+32]
   \   00000014   0x4208             TST      R0,R1
   \   00000016   0xD01D             BEQ.N    ??sync_isr_0
     10                  if(camera->acq_flag){
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x7B40             LDRB     R0,[R0, #+13]
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD016             BEQ.N    ??sync_isr_1
     11                      LPLD_DMA_EnableReq((camcfg->DMA_CHx)); // enable DMA hardware trigger, only for DMA_CH0-15
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable6_6  ;; 0x4000800c
   \   00000028   0x6801             LDR      R1,[R0, #+0]
   \   0000002A   0x2201             MOVS     R2,#+1
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF990 0x003C      LDRSB    R0,[R0, #+60]
   \   00000036   0x4082             LSLS     R2,R2,R0
   \   00000038   0x4311             ORRS     R1,R2,R1
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable6_6  ;; 0x4000800c
   \   0000003E   0x6001             STR      R1,[R0, #+0]
     12                      camera->href_cnt ++;
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0x6940             LDR      R0,[R0, #+20]
   \   00000048   0x1C40             ADDS     R0,R0,#+1
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   0000004E   0x6809             LDR      R1,[R1, #+0]
   \   00000050   0x6148             STR      R0,[R1, #+20]
     13                  }
     14                  return;
   \                     ??sync_isr_1: (+1)
   \   00000052   0xE063             B.N      ??sync_isr_2
     15              }
     16          
     17              /* 场中断 */
     18              if(LPLD_GPIO_IsPinxExt(camcfg->SYNC_PORTX, camcfg->vsync)){
   \                     ??sync_isr_0: (+1)
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x6C00             LDR      R0,[R0, #+64]
   \   0000005C   0xF8D0 0x00A0      LDR      R0,[R0, #+160]
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000064   0x6809             LDR      R1,[R1, #+0]
   \   00000066   0x69C9             LDR      R1,[R1, #+28]
   \   00000068   0x4208             TST      R0,R1
   \   0000006A   0xD057             BEQ.N    ??sync_isr_3
     19                  if (camera->allow_acq_once) {
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0x7F00             LDRB     R0,[R0, #+28]
   \   00000074   0x2800             CMP      R0,#+0
   \   00000076   0xD030             BEQ.N    ??sync_isr_4
     20                      LPLD_DMA_LoadDstAddr(camcfg->DMA_CHx, camera->buff.data); // load destination address
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable6_7  ;; 0x40009000
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000080   0x6809             LDR      R1,[R1, #+0]
   \   00000082   0xF891 0x103C      LDRB     R1,[R1, #+60]
   \   00000086   0x0149             LSLS     R1,R1,#+5
   \   00000088   0x4408             ADD      R0,R0,R1
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   0000008E   0x6809             LDR      R1,[R1, #+0]
   \   00000090   0x6849             LDR      R1,[R1, #+4]
   \   00000092   0x6101             STR      R1,[R0, #+16]
     21                      camera->allow_acq_once = FALSE;
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   0000009A   0x6809             LDR      R1,[R1, #+0]
   \   0000009C   0x7708             STRB     R0,[R1, #+28]
     22                      camera->camerr = CAM_OK;
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000000A4   0x6809             LDR      R1,[R1, #+0]
   \   000000A6   0x7308             STRB     R0,[R1, #+12]
     23                      camera->vsync_cnt ++;
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x6900             LDR      R0,[R0, #+16]
   \   000000B0   0x1C40             ADDS     R0,R0,#+1
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000000B6   0x6809             LDR      R1,[R1, #+0]
   \   000000B8   0x6108             STR      R0,[R1, #+16]
     24                      camera->href_cnt = 0;
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000000C0   0x6809             LDR      R1,[R1, #+0]
   \   000000C2   0x6148             STR      R0,[R1, #+20]
     25                      camera->rowacq_cnt = 0;
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000000CA   0x6809             LDR      R1,[R1, #+0]
   \   000000CC   0x6188             STR      R0,[R1, #+24]
     26                      camera->acq_flag = TRUE;
   \   000000CE   0x2001             MOVS     R0,#+1
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000000D4   0x6809             LDR      R1,[R1, #+0]
   \   000000D6   0x7348             STRB     R0,[R1, #+13]
   \   000000D8   0xE01F             B.N      ??sync_isr_5
     27                  }else if(camera->acq_flag){ // terminate acq with row missing
   \                     ??sync_isr_4: (+1)
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000DE   0x6800             LDR      R0,[R0, #+0]
   \   000000E0   0x7B40             LDRB     R0,[R0, #+13]
   \   000000E2   0x2800             CMP      R0,#+0
   \   000000E4   0xD019             BEQ.N    ??sync_isr_5
     28                      camera->acq_flag = FALSE;
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000000EC   0x6809             LDR      R1,[R1, #+0]
   \   000000EE   0x7348             STRB     R0,[R1, #+13]
     29                      camera->camerr |= CAM_ROW_MISS;
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0x7B00             LDRB     R0,[R0, #+12]
   \   000000F8   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000FC   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000100   0x6809             LDR      R1,[R1, #+0]
   \   00000102   0x7308             STRB     R0,[R1, #+12]
     30                      //disable_irq(camcfg->SYNC_PORTX_IRQn);
     31                      //camera->img_proc();
     32                      camera->allow_acq_once = TRUE;
   \   00000104   0x2001             MOVS     R0,#+1
   \   00000106   0x....             LDR.N    R1,??DataTable6_5
   \   00000108   0x6809             LDR      R1,[R1, #+0]
   \   0000010A   0x7708             STRB     R0,[R1, #+28]
     33                      LPLD_GPIO_ClearIntFlag(camcfg->SYNC_PORTX);
   \   0000010C   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000110   0x....             LDR.N    R1,??DataTable6_4
   \   00000112   0x6809             LDR      R1,[R1, #+0]
   \   00000114   0x6C09             LDR      R1,[R1, #+64]
   \   00000116   0xF8C1 0x00A0      STR      R0,[R1, #+160]
     34                      //enable_irq(camcfg->SYNC_PORTX_IRQn);
     35                  }
     36                  return;
   \                     ??sync_isr_5: (+1)
   \   0000011A   0xE7FF             B.N      ??sync_isr_2
     37              }
     38          }
   \                     ??sync_isr_3: (+1)
   \                     ??sync_isr_2: (+1)
   \   0000011C   0x4770             BX       LR               ;; return
     39          

   \                                 In section .text, align 2, keep-with-next
     40          static void row_acq_finished(void){
   \                     row_acq_finished: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     41              camera->rowacq_cnt ++;
   \   00000002   0x....             LDR.N    R0,??DataTable6_5
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x6980             LDR      R0,[R0, #+24]
   \   00000008   0x1C40             ADDS     R0,R0,#+1
   \   0000000A   0x....             LDR.N    R1,??DataTable6_5
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x6188             STR      R0,[R1, #+24]
     42              if(camera->rowacq_cnt == camera->buff.nrows)// teminate acq without row missing
   \   00000010   0x....             LDR.N    R0,??DataTable6_5
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x6980             LDR      R0,[R0, #+24]
   \   00000016   0x....             LDR.N    R1,??DataTable6_5
   \   00000018   0x6809             LDR      R1,[R1, #+0]
   \   0000001A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000001E   0x4288             CMP      R0,R1
   \   00000020   0xD10D             BNE.N    ??row_acq_finished_0
     43              {
     44                  camera->acq_flag = FALSE;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR.N    R1,??DataTable6_5
   \   00000026   0x6809             LDR      R1,[R1, #+0]
   \   00000028   0x7348             STRB     R0,[R1, #+13]
     45                  disable_irq(camcfg->SYNC_PORTX_IRQn);
   \   0000002A   0x....             LDR.N    R0,??DataTable6_4
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0xF990 0x003D      LDRSB    R0,[R0, #+61]
   \   00000032   0x.... 0x....      BL       __NVIC_DisableIRQ
     46                  //NVIC_SetPriority((IRQn_Type)(camcfg->DMA_CHx),NVIC_EncodePriority(NVIC_PriorityGroup_4,15,0));
     47                  camera->img_proc();
   \   00000036   0x....             LDR.N    R0,??DataTable6_5
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x6880             LDR      R0,[R0, #+8]
   \   0000003C   0x4780             BLX      R0
     48                  //NVIC_SetPriority((IRQn_Type)(camcfg->DMA_CHx),NVIC_EncodePriority(NVIC_PriorityGroup_4,9,0));
     49                  //camera__take_a_photo_please();
     50              }
     51          }
   \                     ??row_acq_finished_0: (+1)
   \   0000003E   0xBD01             POP      {R0,PC}          ;; return
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void camera__take_a_photo_please(void){
   \                     camera__take_a_photo_please: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     54              if(camera->acq_flag == TRUE) return;
   \   00000002   0x....             LDR.N    R0,??DataTable6_5
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x7B40             LDRB     R0,[R0, #+13]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD010             BEQ.N    ??camera__take_a_photo_please_0
     55              camera->allow_acq_once = TRUE;
   \                     ??camera__take_a_photo_please_1: (+1)
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable6_5
   \   00000010   0x6809             LDR      R1,[R1, #+0]
   \   00000012   0x7708             STRB     R0,[R1, #+28]
     56              LPLD_GPIO_ClearIntFlag(camcfg->SYNC_PORTX);
   \   00000014   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000018   0x....             LDR.N    R1,??DataTable6_4
   \   0000001A   0x6809             LDR      R1,[R1, #+0]
   \   0000001C   0x6C09             LDR      R1,[R1, #+64]
   \   0000001E   0xF8C1 0x00A0      STR      R0,[R1, #+160]
     57              enable_irq(camcfg->SYNC_PORTX_IRQn);
   \   00000022   0x....             LDR.N    R0,??DataTable6_4
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF990 0x003D      LDRSB    R0,[R0, #+61]
   \   0000002A   0x.... 0x....      BL       __NVIC_EnableIRQ
     58          }
   \                     ??camera__take_a_photo_please_0: (+1)
   \   0000002E   0xBD01             POP      {R0,PC}          ;; return
     59          
     60          //#include "sccb.h"
     61          

   \                                 In section .text, align 2, keep-with-next
     62          void camera__config(camera_cfg_t * camcfg_usr, camera_t * camera_usr){
   \                     camera__config: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB093             SUB      SP,SP,#+76
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000C             MOVS     R4,R1
     63              GPIO_InitTypeDef gpio_init={0};
   \   00000008   0xA801             ADD      R0,SP,#+4
   \   0000000A   0x2114             MOVS     R1,#+20
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
     64              DMA_InitTypeDef  dma_init={0};
   \   00000010   0xA807             ADD      R0,SP,#+28
   \   00000012   0x212C             MOVS     R1,#+44
   \   00000014   0x.... 0x....      BL       __aeabi_memclr4
     65          
     66              ASSERT( camcfg->SYNC_PTx <= PTE);
   \   00000018   0x....             LDR.N    R0,??DataTable6_4
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x6980             LDR      R0,[R0, #+24]
   \   0000001E   0x....             LDR.N    R1,??DataTable6_8  ;; 0x400ff101
   \   00000020   0x4288             CMP      R0,R1
   \   00000022   0xD303             BCC.N    ??camera__config_0
   \   00000024   0x2142             MOVS     R1,#+66
   \   00000026   0x....             LDR.N    R0,??DataTable6_9
   \   00000028   0x.... 0x....      BL       assert_failed
     67          
     68          	camcfg = camcfg_usr;
   \                     ??camera__config_0: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable6_4
   \   0000002E   0x6005             STR      R5,[R0, #+0]
     69          	camera = camera_usr;
   \   00000030   0x....             LDR.N    R0,??DataTable6_5
   \   00000032   0x6004             STR      R4,[R0, #+0]
     70          
     71              // 初始化 PORTX_IRQn 以便于快速开关中断，初始化 PORTX 以便于快速检测中断触发源
     72              if(camcfg->SYNC_PTx == PTA) camcfg->SYNC_PORTX_IRQn = PORTA_IRQn, camcfg->SYNC_PORTX = PORTA;
   \   00000034   0x....             LDR.N    R0,??DataTable6_4
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x6980             LDR      R0,[R0, #+24]
   \   0000003A   0x....             LDR.N    R1,??DataTable6_10  ;; 0x400ff000
   \   0000003C   0x4288             CMP      R0,R1
   \   0000003E   0xD109             BNE.N    ??camera__config_1
   \   00000040   0x2057             MOVS     R0,#+87
   \   00000042   0x....             LDR.N    R1,??DataTable6_4
   \   00000044   0x6809             LDR      R1,[R1, #+0]
   \   00000046   0xF881 0x003D      STRB     R0,[R1, #+61]
   \   0000004A   0x....             LDR.N    R0,??DataTable6_11  ;; 0x40049000
   \   0000004C   0x....             LDR.N    R1,??DataTable6_4
   \   0000004E   0x6809             LDR      R1,[R1, #+0]
   \   00000050   0x6408             STR      R0,[R1, #+64]
   \   00000052   0xE038             B.N      ??camera__config_2
     73              else if(camcfg->SYNC_PTx == PTB) camcfg->SYNC_PORTX_IRQn = PORTB_IRQn, camcfg->SYNC_PORTX = PORTB;
   \                     ??camera__config_1: (+1)
   \   00000054   0x....             LDR.N    R0,??DataTable6_4
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x6980             LDR      R0,[R0, #+24]
   \   0000005A   0x....             LDR.N    R1,??DataTable6_12  ;; 0x400ff040
   \   0000005C   0x4288             CMP      R0,R1
   \   0000005E   0xD109             BNE.N    ??camera__config_3
   \   00000060   0x2058             MOVS     R0,#+88
   \   00000062   0x....             LDR.N    R1,??DataTable6_4
   \   00000064   0x6809             LDR      R1,[R1, #+0]
   \   00000066   0xF881 0x003D      STRB     R0,[R1, #+61]
   \   0000006A   0x....             LDR.N    R0,??DataTable6_13  ;; 0x4004a000
   \   0000006C   0x....             LDR.N    R1,??DataTable6_4
   \   0000006E   0x6809             LDR      R1,[R1, #+0]
   \   00000070   0x6408             STR      R0,[R1, #+64]
   \   00000072   0xE028             B.N      ??camera__config_2
     74              else if(camcfg->SYNC_PTx == PTC) camcfg->SYNC_PORTX_IRQn = PORTC_IRQn, camcfg->SYNC_PORTX = PORTC;
   \                     ??camera__config_3: (+1)
   \   00000074   0x....             LDR.N    R0,??DataTable6_4
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0x6980             LDR      R0,[R0, #+24]
   \   0000007A   0x....             LDR.N    R1,??DataTable6_14  ;; 0x400ff080
   \   0000007C   0x4288             CMP      R0,R1
   \   0000007E   0xD109             BNE.N    ??camera__config_4
   \   00000080   0x2059             MOVS     R0,#+89
   \   00000082   0x....             LDR.N    R1,??DataTable6_4
   \   00000084   0x6809             LDR      R1,[R1, #+0]
   \   00000086   0xF881 0x003D      STRB     R0,[R1, #+61]
   \   0000008A   0x....             LDR.N    R0,??DataTable6_15  ;; 0x4004b000
   \   0000008C   0x....             LDR.N    R1,??DataTable6_4
   \   0000008E   0x6809             LDR      R1,[R1, #+0]
   \   00000090   0x6408             STR      R0,[R1, #+64]
   \   00000092   0xE018             B.N      ??camera__config_2
     75              else if(camcfg->SYNC_PTx == PTD) camcfg->SYNC_PORTX_IRQn = PORTD_IRQn, camcfg->SYNC_PORTX = PORTD;
   \                     ??camera__config_4: (+1)
   \   00000094   0x....             LDR.N    R0,??DataTable6_4
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x6980             LDR      R0,[R0, #+24]
   \   0000009A   0x....             LDR.N    R1,??DataTable6_16  ;; 0x400ff0c0
   \   0000009C   0x4288             CMP      R0,R1
   \   0000009E   0xD109             BNE.N    ??camera__config_5
   \   000000A0   0x205A             MOVS     R0,#+90
   \   000000A2   0x....             LDR.N    R1,??DataTable6_4
   \   000000A4   0x6809             LDR      R1,[R1, #+0]
   \   000000A6   0xF881 0x003D      STRB     R0,[R1, #+61]
   \   000000AA   0x....             LDR.N    R0,??DataTable6_17  ;; 0x4004c000
   \   000000AC   0x....             LDR.N    R1,??DataTable6_4
   \   000000AE   0x6809             LDR      R1,[R1, #+0]
   \   000000B0   0x6408             STR      R0,[R1, #+64]
   \   000000B2   0xE008             B.N      ??camera__config_2
     76              else camcfg->SYNC_PORTX_IRQn = PORTE_IRQn, camcfg->SYNC_PORTX = PORTE;
   \                     ??camera__config_5: (+1)
   \   000000B4   0x205B             MOVS     R0,#+91
   \   000000B6   0x....             LDR.N    R1,??DataTable6_4
   \   000000B8   0x6809             LDR      R1,[R1, #+0]
   \   000000BA   0xF881 0x003D      STRB     R0,[R1, #+61]
   \   000000BE   0x....             LDR.N    R0,??DataTable6_18  ;; 0x4004d000
   \   000000C0   0x....             LDR.N    R1,??DataTable6_4
   \   000000C2   0x6809             LDR      R1,[R1, #+0]
   \   000000C4   0x6408             STR      R0,[R1, #+64]
     77          
     78              // init scl and sda
     79              //LPLD_SCCB_Init(camcfg);
     80          
     81              // all pin except scl, sda and rst is input, and rst is shorted to gnd
     82              gpio_init.GPIO_Dir = DIR_INPUT;
   \                     ??camera__config_2: (+1)
   \   000000C6   0x2000             MOVS     R0,#+0
   \   000000C8   0xF88D 0x0010      STRB     R0,[SP, #+16]
     83          
     84              // init vsync and href
     85              gpio_init.GPIO_PTx = camcfg->SYNC_PTx;
   \   000000CC   0x....             LDR.N    R0,??DataTable6_4
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0x6980             LDR      R0,[R0, #+24]
   \   000000D2   0x9001             STR      R0,[SP, #+4]
     86              gpio_init.GPIO_Pins = (camcfg->vsync) | (camcfg->href);
   \   000000D4   0x....             LDR.N    R0,??DataTable6_4
   \   000000D6   0x6800             LDR      R0,[R0, #+0]
   \   000000D8   0x69C1             LDR      R1,[R0, #+28]
   \   000000DA   0x....             LDR.N    R0,??DataTable6_4
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0x6A00             LDR      R0,[R0, #+32]
   \   000000E0   0x4301             ORRS     R1,R0,R1
   \   000000E2   0x9102             STR      R1,[SP, #+8]
     87              gpio_init.GPIO_Isr = sync_isr;
   \   000000E4   0x....             LDR.N    R0,??DataTable6_19
   \   000000E6   0x9005             STR      R0,[SP, #+20]
     88              gpio_init.GPIO_PinControl = INPUT_PULL_UP|IRQC_RI;
   \   000000E8   0x....             LDR.N    R0,??DataTable6_20  ;; 0x90003
   \   000000EA   0x9003             STR      R0,[SP, #+12]
     89              LPLD_GPIO_Init(gpio_init);
   \   000000EC   0xA901             ADD      R1,SP,#+4
   \   000000EE   0xB084             SUB      SP,SP,#+16
   \   000000F0   0x4668             MOV      R0,SP
   \   000000F2   0x2214             MOVS     R2,#+20
   \   000000F4   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000F8   0xBC0F             POP      {R0-R3}
   \   000000FA   0x.... 0x....      BL       LPLD_GPIO_Init
     90          
     91              // init d0-d7
     92              gpio_init.GPIO_PTx = camcfg->data_port.PTx;
   \   000000FE   0x....             LDR.N    R0,??DataTable6_4
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x6A40             LDR      R0,[R0, #+36]
   \   00000104   0x9001             STR      R0,[SP, #+4]
     93              gpio_init.GPIO_Pins = camcfg->data_port.GPIO_Pinn;
   \   00000106   0x....             LDR.N    R0,??DataTable6_4
   \   00000108   0x6800             LDR      R0,[R0, #+0]
   \   0000010A   0x6A80             LDR      R0,[R0, #+40]
   \   0000010C   0x9002             STR      R0,[SP, #+8]
     94              gpio_init.GPIO_Isr = NULL;
   \   0000010E   0x2000             MOVS     R0,#+0
   \   00000110   0x9005             STR      R0,[SP, #+20]
     95              gpio_init.GPIO_PinControl = INPUT_PULL_DOWN|IRQC_DIS;
   \   00000112   0x2002             MOVS     R0,#+2
   \   00000114   0x9003             STR      R0,[SP, #+12]
     96              LPLD_GPIO_Init(gpio_init);
   \   00000116   0xA901             ADD      R1,SP,#+4
   \   00000118   0xB084             SUB      SP,SP,#+16
   \   0000011A   0x4668             MOV      R0,SP
   \   0000011C   0x2214             MOVS     R2,#+20
   \   0000011E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000122   0xBC0F             POP      {R0-R3}
   \   00000124   0x.... 0x....      BL       LPLD_GPIO_Init
     97          
     98              // init pclk and dma (1)
     99              gpio_init.GPIO_PTx = camcfg->pclk.PTx;
   \   00000128   0x....             LDR.N    R0,??DataTable6_4
   \   0000012A   0x6800             LDR      R0,[R0, #+0]
   \   0000012C   0x6B00             LDR      R0,[R0, #+48]
   \   0000012E   0x9001             STR      R0,[SP, #+4]
    100              gpio_init.GPIO_Pins = camcfg->pclk.GPIO_Pinn;
   \   00000130   0x....             LDR.N    R0,??DataTable6_4
   \   00000132   0x6800             LDR      R0,[R0, #+0]
   \   00000134   0x6B40             LDR      R0,[R0, #+52]
   \   00000136   0x9002             STR      R0,[SP, #+8]
    101              gpio_init.GPIO_Isr = NULL;
   \   00000138   0x2000             MOVS     R0,#+0
   \   0000013A   0x9005             STR      R0,[SP, #+20]
    102              gpio_init.GPIO_PinControl = INPUT_PULL_UP|IRQC_DMARI;
   \   0000013C   0x....             LDR.N    R0,??DataTable6_21  ;; 0x10003
   \   0000013E   0x9003             STR      R0,[SP, #+12]
    103              LPLD_GPIO_Init(gpio_init);
   \   00000140   0xA901             ADD      R1,SP,#+4
   \   00000142   0xB084             SUB      SP,SP,#+16
   \   00000144   0x4668             MOV      R0,SP
   \   00000146   0x2214             MOVS     R2,#+20
   \   00000148   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000014C   0xBC0F             POP      {R0-R3}
   \   0000014E   0x.... 0x....      BL       LPLD_GPIO_Init
    104              // init pclk and dma (2)
    105              dma_init.DMA_CHx = camcfg->DMA_CHx;
   \   00000152   0x....             LDR.N    R0,??DataTable6_4
   \   00000154   0x6800             LDR      R0,[R0, #+0]
   \   00000156   0xF890 0x003C      LDRB     R0,[R0, #+60]
   \   0000015A   0xF88D 0x001C      STRB     R0,[SP, #+28]
    106              if(camcfg->pclk.PTx == PTA) dma_init.DMA_Req = PORTA_DMAREQ;
   \   0000015E   0x....             LDR.N    R0,??DataTable6_4
   \   00000160   0x6800             LDR      R0,[R0, #+0]
   \   00000162   0x6B00             LDR      R0,[R0, #+48]
   \   00000164   0x....             LDR.N    R1,??DataTable6_10  ;; 0x400ff000
   \   00000166   0x4288             CMP      R0,R1
   \   00000168   0xD103             BNE.N    ??camera__config_6
   \   0000016A   0x2031             MOVS     R0,#+49
   \   0000016C   0xF88D 0x001D      STRB     R0,[SP, #+29]
   \   00000170   0xE020             B.N      ??camera__config_7
    107              else if(camcfg->pclk.PTx == PTB) dma_init.DMA_Req = PORTB_DMAREQ;
   \                     ??camera__config_6: (+1)
   \   00000172   0x....             LDR.N    R0,??DataTable6_4
   \   00000174   0x6800             LDR      R0,[R0, #+0]
   \   00000176   0x6B00             LDR      R0,[R0, #+48]
   \   00000178   0x....             LDR.N    R1,??DataTable6_12  ;; 0x400ff040
   \   0000017A   0x4288             CMP      R0,R1
   \   0000017C   0xD103             BNE.N    ??camera__config_8
   \   0000017E   0x2032             MOVS     R0,#+50
   \   00000180   0xF88D 0x001D      STRB     R0,[SP, #+29]
   \   00000184   0xE016             B.N      ??camera__config_7
    108              else if(camcfg->pclk.PTx == PTC) dma_init.DMA_Req = PORTC_DMAREQ;
   \                     ??camera__config_8: (+1)
   \   00000186   0x....             LDR.N    R0,??DataTable6_4
   \   00000188   0x6800             LDR      R0,[R0, #+0]
   \   0000018A   0x6B00             LDR      R0,[R0, #+48]
   \   0000018C   0x....             LDR.N    R1,??DataTable6_14  ;; 0x400ff080
   \   0000018E   0x4288             CMP      R0,R1
   \   00000190   0xD103             BNE.N    ??camera__config_9
   \   00000192   0x2033             MOVS     R0,#+51
   \   00000194   0xF88D 0x001D      STRB     R0,[SP, #+29]
   \   00000198   0xE00C             B.N      ??camera__config_7
    109              else if(camcfg->pclk.PTx == PTD) dma_init.DMA_Req = PORTD_DMAREQ;
   \                     ??camera__config_9: (+1)
   \   0000019A   0x....             LDR.N    R0,??DataTable6_4
   \   0000019C   0x6800             LDR      R0,[R0, #+0]
   \   0000019E   0x6B00             LDR      R0,[R0, #+48]
   \   000001A0   0x....             LDR.N    R1,??DataTable6_16  ;; 0x400ff0c0
   \   000001A2   0x4288             CMP      R0,R1
   \   000001A4   0xD103             BNE.N    ??camera__config_10
   \   000001A6   0x2034             MOVS     R0,#+52
   \   000001A8   0xF88D 0x001D      STRB     R0,[SP, #+29]
   \   000001AC   0xE002             B.N      ??camera__config_7
    110              else dma_init.DMA_Req = PORTE_DMAREQ;
   \                     ??camera__config_10: (+1)
   \   000001AE   0x2035             MOVS     R0,#+53
   \   000001B0   0xF88D 0x001D      STRB     R0,[SP, #+29]
    111              dma_init.DMA_MajorLoopCnt = camera->buff.ncols / 8;
   \                     ??camera__config_7: (+1)
   \   000001B4   0x....             LDR.N    R0,??DataTable6_5
   \   000001B6   0x6800             LDR      R0,[R0, #+0]
   \   000001B8   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \   000001BC   0x2108             MOVS     R1,#+8
   \   000001BE   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001C2   0xF8AD 0x0020      STRH     R0,[SP, #+32]
    112              dma_init.DMA_MinorByteCnt = 1;
   \   000001C6   0x2001             MOVS     R0,#+1
   \   000001C8   0x9009             STR      R0,[SP, #+36]
    113              dma_init.DMA_SourceAddr = ((uint32_t)&(camcfg->data_port.PTx->PDIR) + (camcfg->data_port.GPIO_Pinnum/8));
   \   000001CA   0x....             LDR.N    R0,??DataTable6_4
   \   000001CC   0x6800             LDR      R0,[R0, #+0]
   \   000001CE   0x6A40             LDR      R0,[R0, #+36]
   \   000001D0   0x3010             ADDS     R0,R0,#+16
   \   000001D2   0x....             LDR.N    R1,??DataTable6_4
   \   000001D4   0x6809             LDR      R1,[R1, #+0]
   \   000001D6   0x6AC9             LDR      R1,[R1, #+44]
   \   000001D8   0xEB10 0x00D1      ADDS     R0,R0,R1, LSR #+3
   \   000001DC   0x900A             STR      R0,[SP, #+40]
    114              dma_init.DMA_DestAddr = (uint32_t)(camera->buff.data);
   \   000001DE   0x....             LDR.N    R0,??DataTable6_5
   \   000001E0   0x6800             LDR      R0,[R0, #+0]
   \   000001E2   0x6840             LDR      R0,[R0, #+4]
   \   000001E4   0x900D             STR      R0,[SP, #+52]
    115              dma_init.DMA_DestAddrOffset = 1;
   \   000001E6   0x2001             MOVS     R0,#+1
   \   000001E8   0xF8AD 0x003A      STRH     R0,[SP, #+58]
    116              dma_init.DMA_AutoDisableReq = TRUE;
   \   000001EC   0x2001             MOVS     R0,#+1
   \   000001EE   0xF88D 0x0040      STRB     R0,[SP, #+64]
    117              dma_init.DMA_MajorCompleteIntEnable = TRUE;
   \   000001F2   0x2001             MOVS     R0,#+1
   \   000001F4   0xF88D 0x0041      STRB     R0,[SP, #+65]
    118              dma_init.DMA_Isr = row_acq_finished;
   \   000001F8   0x....             LDR.N    R0,??DataTable6_22
   \   000001FA   0x9011             STR      R0,[SP, #+68]
    119              LPLD_DMA_Init(dma_init);
   \   000001FC   0xA907             ADD      R1,SP,#+28
   \   000001FE   0xB084             SUB      SP,SP,#+16
   \   00000200   0x4668             MOV      R0,SP
   \   00000202   0x222C             MOVS     R2,#+44
   \   00000204   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000208   0xBC0F             POP      {R0-R3}
   \   0000020A   0x.... 0x....      BL       LPLD_DMA_Init
    120              LPLD_DMA_EnableIrq(dma_init);
   \   0000020E   0xA907             ADD      R1,SP,#+28
   \   00000210   0xB084             SUB      SP,SP,#+16
   \   00000212   0x4668             MOV      R0,SP
   \   00000214   0x222C             MOVS     R2,#+44
   \   00000216   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000021A   0xBC0F             POP      {R0-R3}
   \   0000021C   0x.... 0x....      BL       LPLD_DMA_EnableIrq
    121          
    122              // init camera internal status
    123          	camera->vsync_cnt = 0;
   \   00000220   0x2000             MOVS     R0,#+0
   \   00000222   0x....             LDR.N    R1,??DataTable6_5
   \   00000224   0x6809             LDR      R1,[R1, #+0]
   \   00000226   0x6108             STR      R0,[R1, #+16]
    124              camera->allow_acq_once = TRUE;
   \   00000228   0x2001             MOVS     R0,#+1
   \   0000022A   0x....             LDR.N    R1,??DataTable6_5
   \   0000022C   0x6809             LDR      R1,[R1, #+0]
   \   0000022E   0x7708             STRB     R0,[R1, #+28]
    125          
    126              // enable interrupts
    127              NVIC_SetPriority((IRQn_Type)(camcfg->DMA_CHx),NVIC_EncodePriority(NVIC_PriorityGroup_4,9,0));
   \   00000230   0x2200             MOVS     R2,#+0
   \   00000232   0x2109             MOVS     R1,#+9
   \   00000234   0x2003             MOVS     R0,#+3
   \   00000236   0x.... 0x....      BL       NVIC_EncodePriority
   \   0000023A   0x0001             MOVS     R1,R0
   \   0000023C   0x....             LDR.N    R0,??DataTable6_4
   \   0000023E   0x6800             LDR      R0,[R0, #+0]
   \   00000240   0xF990 0x003C      LDRSB    R0,[R0, #+60]
   \   00000244   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000246   0x.... 0x....      BL       __NVIC_SetPriority
    128              NVIC_SetPriority(camcfg->SYNC_PORTX_IRQn,NVIC_EncodePriority(NVIC_PriorityGroup_4,8,0));
   \   0000024A   0x2200             MOVS     R2,#+0
   \   0000024C   0x2108             MOVS     R1,#+8
   \   0000024E   0x2003             MOVS     R0,#+3
   \   00000250   0x.... 0x....      BL       NVIC_EncodePriority
   \   00000254   0x0001             MOVS     R1,R0
   \   00000256   0x....             LDR.N    R0,??DataTable6_4
   \   00000258   0x6800             LDR      R0,[R0, #+0]
   \   0000025A   0xF990 0x003D      LDRSB    R0,[R0, #+61]
   \   0000025E   0x.... 0x....      BL       __NVIC_SetPriority
    129              LPLD_GPIO_ClearIntFlag(camcfg->SYNC_PORTX);
   \   00000262   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000266   0x....             LDR.N    R1,??DataTable6_4
   \   00000268   0x6809             LDR      R1,[R1, #+0]
   \   0000026A   0x6C09             LDR      R1,[R1, #+64]
   \   0000026C   0xF8C1 0x00A0      STR      R0,[R1, #+160]
    130              enable_irq(camcfg->SYNC_PORTX_IRQn);
   \   00000270   0x....             LDR.N    R0,??DataTable6_4
   \   00000272   0x6800             LDR      R0,[R0, #+0]
   \   00000274   0xF990 0x003D      LDRSB    R0,[R0, #+61]
   \   00000278   0x.... 0x....      BL       __NVIC_EnableIRQ
    131          }
   \   0000027C   0xB013             ADD      SP,SP,#+76
   \   0000027E   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0xE000E180         DC32     0xe000e180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0xE000E400         DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0xE000ED18         DC32     0xe000ed18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     camcfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     camera

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x4000800C         DC32     0x4000800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x40009000         DC32     0x40009000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x400FF101         DC32     0x400ff101

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x40049000         DC32     0x40049000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x4004A000         DC32     0x4004a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x4004B000         DC32     0x4004b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x4004C000         DC32     0x4004c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \   00000000   0x4004D000         DC32     0x4004d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_19:
   \   00000000   0x........         DC32     sync_isr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_20:
   \   00000000   0x00090003         DC32     0x90003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_21:
   \   00000000   0x00010003         DC32     0x10003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_22:
   \   00000000   0x........         DC32     row_acq_finished

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x46 0x3A          DC8 "F:\\K60_CAR_2018\\lib\\peripheral\\camera.c"
   \              0x5C 0x4B    
   \              0x36 0x30    
   \              0x5F 0x43    
   \              0x41 0x52    
   \              0x5F 0x32    
   \              0x30 0x31    
   \              0x38 0x5C    
   \              0x6C 0x69    
   \              0x62 0x5C    
   \              0x70 0x65    
   \              0x72 0x69    
   \              0x70 0x68    
   \              0x65 0x72    
   \              0x61 0x6C    
   \              0x5C 0x63    
   \              0x61 0x6D    
   \              0x65 0x72    
   \              0x61 0x2E    
   \              0x63 0x00    
    132          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   NVIC_EncodePriority
       0   __NVIC_DisableIRQ
       0   __NVIC_EnableIRQ
       0   __NVIC_SetPriority
     104   camera__config
        88   -> LPLD_DMA_EnableIrq
        88   -> LPLD_DMA_Init
        88   -> LPLD_GPIO_Init
        88   -> NVIC_EncodePriority
        88   -> __NVIC_EnableIRQ
        88   -> __NVIC_SetPriority
        88   -> __aeabi_memclr4
       104   -> __aeabi_memcpy4
        88   -> assert_failed
       8   camera__take_a_photo_please
         8   -> __NVIC_EnableIRQ
       8   row_acq_finished
         8   -- Indirect call
         8   -> __NVIC_DisableIRQ
       0   sync_isr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_22
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
      40  ?_0
      20  ?_1
      44  ?_2
      62  NVIC_EncodePriority
      28  __NVIC_DisableIRQ
      28  __NVIC_EnableIRQ
      38  __NVIC_SetPriority
       4  camcfg
       4  camera
     640  camera__config
      48  camera__take_a_photo_please
      64  row_acq_finished
     286  sync_isr

 
     8 bytes in section .bss
   104 bytes in section .rodata
 1 286 bytes in section .text
 
 1 286 bytes of CODE  memory
   104 bytes of CONST memory
     8 bytes of DATA  memory

Errors: none
Warnings: none
